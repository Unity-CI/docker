# [Required secrets]
#   UNITY_LICENSE: Contents of an Unity license file (*.ulf)
name: Test

on:
  workflow_dispatch:
  push:
    paths:
      - "**/Dockerfile"
      - ".github/workflows/test.yml"
      - "reference-project-test/**"
  pull_request:
    paths:
      - "**/Dockerfile"
      - ".github/workflows/test.yml"
      - "reference-project-test/**"

env:
  UNITY_LICENSE: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><root>\n    <License id=\"Terms\">\n        <MachineBindings>\n            <Binding Key=\"1\" Value=\"9a3fce69af4f420ea8c4e6faeebd4b23\"/>\n            <Binding Key=\"2\" Value=\"9a3fce69af4f420ea8c4e6faeebd4b23\"/>\n        </MachineBindings>\n        <MachineID Value=\"6YxfhvJBMsxQhj6wRgKzWUZAMjI=\"/>\n        <SerialHash Value=\"5cf6718e34617652360e25684c6919782b1cd366\"/>\n        <Features>\n            <Feature Value=\"33\"/>\n            <Feature Value=\"1\"/>\n            <Feature Value=\"12\"/>\n            <Feature Value=\"2\"/>\n            <Feature Value=\"24\"/>\n            <Feature Value=\"3\"/>\n            <Feature Value=\"36\"/>\n            <Feature Value=\"17\"/>\n            <Feature Value=\"19\"/>\n            <Feature Value=\"62\"/>\n        </Features>\n        <DeveloperData Value=\"AQAAAEY0LUNSVFMtOFFONS04UzVQLUpGUFktTkRBRg==\"/>\n        <SerialMasked Value=\"F4-CRTS-8QN5-8S5P-JFPY-XXXX\"/>\n        <StartDate Value=\"2018-01-30T00:00:00\"/>\n        <UpdateDate Value=\"2021-02-08T08:48:20\"/>\n        <InitialActivationDate Value=\"2018-01-30T11:37:46\"/>\n        <LicenseVersion Value=\"6.x\"/>\n        <ClientProvidedVersion Value=\"2018.4.30f1\"/>\n        <AlwaysOnline Value=\"false\"/>\n        <Entitlements>\n            <Entitlement Ns=\"unity_editor\" Tag=\"UnityPersonal\" Type=\"EDITOR\" ValidTo=\"9999-12-31T00:00:00\"/>\n            <Entitlement Ns=\"unity_editor\" Tag=\"DarkSkin\" Type=\"EDITOR_FEATURE\" ValidTo=\"9999-12-31T00:00:00\"/>\n        </Entitlements>\n    </License>\n<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\"><SignedInfo><CanonicalizationMethod Algorithm=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\"/><SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"/><Reference URI=\"#Terms\"><Transforms><Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/></Transforms><DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/><DigestValue>6KSm7Wxv2+jZVaZFrSBPqIVBCa0=</DigestValue></Reference></SignedInfo><SignatureValue>d/sPlaUOBr+VA9JlS4oe1iVquikd0ti6A6ftVWBNqSWQLgFsrvOsxWIT+xpP1XNmNgcAtPRLBtE3\ng6bisiItUp07hEz8tAhR+p52NxtU0CXBUvRFpJ78KwDi2q+GCsXeS+ue0ACeIL1PnLhbSxMTO8QK\nCrEtoj18Tpuw+Quq9yc2OWbsZrKlEi7bQDQtkS+okeUvD51jK0vZKdQ1DFhvSmVpVMvkP8Sb6VWR\nXydmx2nR9pl+jUQ6JZIvptZBWoTAaRrOWNZVqXD3BIjXmLldecBz+iJCTJypFamMSSNAI4l7As/x\n2RFQZljyymhShG1RDqjddhisTz3yCd/oefocig==</SignatureValue></Signature></root>"

jobs:
  ###########################
  #    Build base and hub   #
  ###########################
  base-and-hub:
    name: Base and hub
    runs-on: ubuntu-18.04
    outputs:
      versions: ${{ steps.setup.outputs.versions }}
      excludes: ${{ steps.setup.outputs.excludes }}
    steps:
      ###########################
      #          Setup          #
      ###########################
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver: docker

      ###########################
      #   Build base and hub    #
      ###########################
      - name: Build base
        uses: docker/build-push-action@v2
        with:
          context: .
          file: base/Dockerfile
          tags: base:dev
      - name: Build hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: hub/Dockerfile
          build-args: baseImage=base:dev
          tags: hub:dev

      ###########################
      #   Save images for next  #
      ###########################
      - name: Save images for next
        run: |
          docker images
          docker save -o base-and-hub.tar base:dev hub:dev
      - uses: actions/upload-artifact@v2
        with:
          path: base-and-hub.tar
          retention-days: 1

      ###########################
      #    Setup build matrix   #
      ###########################
      - name: "Setup build matrix"
        id: setup
        run: |
          # Get the Unity versions for test. (The latest patch versions for each minor version.)
          VERSIONS=`npx unity-changeset list --versions --latest-patch --json --min 2018.3`
          echo "Versions: $VERSIONS"
          echo "::set-output name=versions::$VERSIONS"

          # Exclude linux-il2cpp for Unity 2019.2 or earlier
          EXCLUDES="$EXCLUDES `echo \"$VERSIONS\" | jq -c '[ .[] | select(test(\"2018|2019.1|2019.2\")) | { version: ., module: \"linux-il2cpp\"} ]'`"

          EXCLUDES=`echo "$EXCLUDES" | jq -s -c 'flatten'`
          echo "Excludes: $EXCLUDES"
          echo "::set-output name=excludes::$EXCLUDES"

  ###########################
  #  Build editor and test  #
  ###########################
  editor:
    needs: base-and-hub
    name: Editor (${{ matrix.version }}, ${{ matrix.module }})
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        # The latest patch versions for each minor version.
        version: ${{ fromJson(needs.base-and-hub.outputs.versions) }}
        module:
          - base
          - linux-il2cpp
          - windows-mono
          - mac-mono
          - ios
          - android
          - webgl
        include:
          - module: base
            platform: StandaloneLinux64
          - module: linux-il2cpp
            platform: StandaloneLinux64
          - module: windows-mono
            platform: StandaloneWindows
          - module: mac-mono
            platform: StandaloneOSX
          - module: ios
            platform: iOS
          - module: android
            platform: Android
          - module: webgl
            platform: WebGL
        exclude: ${{ fromJson(needs.base-and-hub.outputs.excludes) }}

    steps:
      ###########################
      #          Setup          #
      ###########################
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver: docker
      - name: Free disk space
        run: .github/workflows/scripts/free_disk_space.sh

      ###########################
      #   Restore base and hub  #
      ###########################
      - uses: actions/download-artifact@v2
      - name: Restore base and hub
        run: |
          docker load -i artifact/base-and-hub.tar
          rm -rf artifact

      ###########################
      #      Setup to build     #
      ###########################
      - name: Setup to build
        run: |
          # The changeset for unity version
          echo "CHANGESET=`npx unity-changeset ${{ matrix.version }}`" >> $GITHUB_ENV

          # For 2019.3 or later, non-il2cpp would also be possible to build with il2cpp image.
          if [ `echo "${{ matrix.version }}" | grep -v '\(2018\|2019.1\|2019.2\)'` ] && [ "${{ matrix.module }}" = 'base' ] ; then
            echo "MODULE=linux-il2cpp" >> $GITHUB_ENV
          else
            echo "MODULE=${{ matrix.module }}" >> $GITHUB_ENV
          fi

          # Change machine-id for test.
          echo -e '\n\nRUN echo 9a3fce69af4f420ea8c4e6faeebd4b23 > /etc/machine-id' >> editor/Dockerfile

      ###########################
      #       Build editor      #
      ###########################
      - name: Build
        # if: steps.build-1.outcome == 'failure'
        uses: docker/build-push-action@v2
        id: build-1
        continue-on-error: true
        timeout-minutes: 40
        with:
          context: .
          file: editor/Dockerfile
          build-args: |
            baseImage=base:dev
            hubImage=hub:dev
            version=${{ matrix.version }}
            changeSet=${{ env.CHANGESET }}
            module=${{ env.MODULE }}
          tags: editor:dev

      ###########################
      #   Build editor (retry)  #
      ###########################
      - name: Sleep for retry
        if: steps.build-1.outcome == 'failure'
        run: sleep 120

      - name: Build (Retry)
        if: steps.build-1.outcome == 'failure'
        uses: docker/build-push-action@v2
        id: build-2
        # continue-on-error: true
        timeout-minutes: 40
        with:
          context: .
          file: editor/Dockerfile
          build-args: |
            baseImage=base:dev
            hubImage=hub:dev
            version=${{ matrix.version }}
            changeSet=${{ env.CHANGESET }}
            module=${{ env.MODULE }}
          tags: editor:dev

      ###########################
      #      Setup to test      #
      ###########################
      - name: Show image size
        run: docker images
      - name: Setup to test
        run: |
          # For 'linux-il2cpp' module, switch the script backend to 'IL2CPP'
          if [ "${{ matrix.module }}" = "linux-il2cpp" ] ; then
            mv -f reference-project-test/ProjectSettings/ProjectSettings_il2cpp.asset reference-project-test/ProjectSettings/ProjectSettings.asset
          fi

      ###########################
      #          Build          #
      ###########################
      - name: Build project
        uses: game-ci/unity-builder@main
        with:
          unityVersion: ${{ matrix.version }}
          customImage: editor:dev
          projectPath: reference-project-test
          targetPlatform: ${{ matrix.platform }}
          allowDirtyBuild: true

      ###########################
      #           Test          #
      ###########################
      - name: Test project
        uses: game-ci/unity-test-runner@main
        with:
          unityVersion: ${{ matrix.version }}
          customImage: editor:dev
          projectPath: reference-project-test
          customParameters: -nographics -buildTarget ${{ matrix.platform }}
